/**
 * @typedef {import('discord.js')} Discord
 */

/**
 * @type {import('picbot-engine').Command}
 */
const marryCommand = {
    name: 'marry',

    description: '–ñ–µ–Ω–∏—Ç –≤–∞—Å –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ `target`',
    group: '–û—Ç–Ω–æ—à–µ–Ω–∏—è',

    examples: [
        '`!marry @Test` –ø–æ–∂–µ–Ω–∏—Ç –≤–∞—Å –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ @Test',
    ],

    syntax: '<member:target=_>',

    /**
     * @param {{ args: { target: Discord.GuildMember } } & import('picbot-engine').CommandContext} param0
     */
    execute: async ({ executor, message, args: { target }, bot: { database } }) => {
        const memberData = await database.getMemberData(target);

        const defaultId = '';
        const oldPartnerId = memberData.getProperty('partner', defaultId);
        const alreadyMarried = oldPartnerId != defaultId;

        if (alreadyMarried) {
            const oldPartner = message.guild.member(oldPartnerId);
            if (oldPartner) {
                await message.reply(`—Ç—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å **${oldPartner.displayName}**!`);
                return;
            }
            else {
                await message.reply(`—Ç—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å... –æ—Ç—Å—É—Ç–≤—É—é—â–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞. –î—É–º–∞—é –Ω–∏–∫—Ç–æ –Ω–µ –æ–±–∏–¥–∏—Ç—Å—è~`);
                memberData.deleteProperty('partner');
            }
        }

        await message.channel.send(`**${target.displayName}**, –Ω–∞–ø–∏—à–∏ **–¥–∞**, —á—Ç–æ–±—ã –ø–æ–∂–µ–Ω–∏—Ç—å—Å—è —Å **${executor.displayName}**`);

        /**
         * @param {{ content: string; }} m
         */
        const filter = m => {
            const lower = m.content.toLowerCase();
            return lower.startsWith('–¥–∞') || lower.startsWith('–Ω–µ—Ç');
        };

        const result = await message.channel.awaitMessages(filter, { time: 120000, max: 1 });
        const hadAnswer = result.size == 1;

        if (!hadAnswer) {
            await message.reply('–æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞–ª–æ üíî');
            return;
        }

        const success = result.first().content.toLowerCase().startsWith('–¥–∞');

        if (success) {
            memberData.setProperty('partner', target.id);
            await message.reply('—É—Ä–∞! –í—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ! üíò');
        }
        else {
            await message.reply('–æ—É... –ü–æ—Ö–æ–∂–µ —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Ä–∞–∑–±–∏–ª–∏. –ù–∞ —Ç–∞–∫–∏–µ —Å–ª—É—á–∞–∏ —É –º–µ–Ω—è –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ `f` üíî');
        }
    },
};

module.exports = marryCommand;
